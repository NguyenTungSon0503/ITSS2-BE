apiVersion: apps/v1
kind: Deployment
metadata:
  name: main-service
  namespace: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: main-service
  template:
    metadata:
      labels:
        app: main-service
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox
          command:
            [
              "sh",
              "-c",
              "until nc -zv rabbitmq-svc.rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;",
            ]
          resources:
            requests:
              cpu: 1m
              memory: 50Mi
            limits:
              cpu: 75m
              memory: 128Mi
      containers:
        - name: main-service
          image: docker.io/orochiteam/itss2:k8s-mainservice
          ports:
            - containerPort: 5000
          envFrom:
            - configMapRef:
                name: main-service-cfm
            - secretRef:
                name: postgres-credentials
            - secretRef:
                name: ggdriver-credentials
            - secretRef:
                name: rabbitmq-credentials
          volumeMounts:
            - name: server-log
              mountPath: /logs
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "0.5"
              memory: "256Mi"
          # startupProbe:
          #   httpGet:
          #     path: /healthcheck
          #     port: 5000
          #   failureThreshold: 3
          #   initialDelaySeconds: 15
          #   periodSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /healthcheck
          #     port: 5000
          #   failureThreshold: 3
          #   initialDelaySeconds: 3
          #   periodSeconds: 5
          # livenessProbe:
          #   httpGet:
          #     path: /healthcheck
          #     port: 5000
          #   failureThreshold: 5
          #   initialDelaySeconds: 3
          #   periodSeconds: 3
      volumes:
        - name: server-log
          persistentVolumeClaim:
            claimName: server-log-pvc

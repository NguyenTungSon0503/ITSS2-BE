version: "3"

services:
  server:
    container_name: server
    restart: always
    build:
      context: ../server/
      dockerfile: ../server/Dockerfile
      args:
        - DATABASE_URL=postgresql://itssuser:password@postgres:5432/itss2
    image: docker.io/orochiteam/itss2:${TAGS}
    user: "node"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./backend/.backend.env
    networks:
      - server-db
      - server-rabbitmq
    ports:
      - ${PORT}:${PORT}
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:${PORT}/healthcheck || exit 1z
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    container_name: postgres
    image: postgres:15
    env_file:
      - ./postgresql/.postgresql.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U itssuser"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - server-db

  rabbitmq:
    image: rabbitmq:3.8.14-management-alpine
    container_name: rabbitmq
    env_file:
      - ./rabbitmq/.rabbitmq.env
    ports:
      - "${RABBITMQ_PORT_CONNECT}:${RABBITMQ_PORT_CONNECT}"
      - "${RABBITMQ_PORT_UI}:${RABBITMQ_PORT_UI}"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - server-rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  mailservice:
    container_name: mailservice
    restart: always
    build:
      context: ../mailservice/
      dockerfile: ../mailservice/Dockerfile
    image: mailservice:v1
    user: "node"
    depends_on:
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_started
    env_file:
      - ./mailservice/.mailservice.env
    networks:
      - server-rabbitmq
    ports:
      - "5001:5001"
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:5001/healthcheck || exit 1z
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  server-db:
    name: server-db
    driver: bridge
  server-rabbitmq:
    name: server-rabbitmq
    driver: bridge

volumes:
  postgres_data: {}
  rabbitmq-data: {}
